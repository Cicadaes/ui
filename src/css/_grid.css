/* TODO: Create some premade grid templates (each in its own class) */

.container {
  padding-right: calc(var(--gutter-col) / 2);
  padding-left: calc(var(--gutter-col) / 2);
  margin-right: auto;
  margin-left: auto;

  @media (--breakpoint-large) {
    max-width: 70em;
    padding-right: var(--gutter-col);
    padding-left: var(--gutter-col);
  }
}

.grid,
.grid-inline {
  grid-template-columns: var(--cols);
  grid-template-rows: var(--rows);
  grid-auto-columns: var(--item-size);
  grid-auto-rows: var(--item-size);
  grid-gap: var(--gutter-row) var(--gutter-col);
}

.grid {
  display: grid;
}

.grid-inline {
  display: inline-grid;
}

/* Number of columns in grid */
@for $i from 1 to var(--max-cols) {
  .x$(i) { grid-template-columns: repeat($i, var(--item-size)); }

  @each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
    @media ($long) {
      .x$(i)$(short) { grid-template-columns: repeat($i, var(--item-size)); }
    }
  }
}

/* Number of rows in grid */
@for $i from 2 to var(--max-rows) {
  .y$(i) { grid-template-rows: repeat($i, auto); }

  @each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
    @media ($long) {
      .y$(i)$(short) { grid-template-rows: repeat($i, auto); }
    }
  }
}

/* Starting column */
@for $i from 1 to var(--max-cols) {
  .c$(i) { grid-column-start: $i; }

  @each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
    @media ($long) {
      .c$(i)$(short) { grid-column-start: $i; }
    }
  }
}

/* Starting row */
@for $i from 1 to var(--max-rows) {
  .r$(i) { grid-row-start: $i; }

  @each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
    @media ($long) {
      .r$(i)$(short) { grid-row-start: $i; }
    }
  }
}

/* Item width */
@for $i from 1 to var(--max-cols) {
  .w$(i) { grid-column-end: span $i; }

  @each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
    @media ($long) {
      .w$(i)$(short) { grid-column-end: span $i; }
    }
  }
}

/* Item height */
@for $i from 1 to var(--max-rows) {
  .h$(i) { grid-row-end: span $i; }

  @each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
    @media ($long) {
      .h$(i)$(short) { grid-row-end: span $i; }
    }
  }
}

.align-row-stretch { justify-items: stretch; } /* default */
.align-row-start { justify-items: start; }
.align-row-end { justify-items: end; }
.align-row-center { justify-items: center; }

@each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
  @media ($long) {
    .align-row-stretch$(short) { justify-items: stretch; }
    .align-row-start$(short) { justify-items: start; }
    .align-row-end$(short) { justify-items: end; }
    .align-row-center$(short) { justify-items: center; }
  }
}

.align-col-stretch { align-items: stretch; } /* default */
.align-col-start { align-items: start; }
.align-col-end { align-items: end; }
.align-col-center { align-items: center; }

@each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
  @media ($long) {
    .align-col-stretch$(short) { align-items: stretch; }
    .align-col-start$(short) { align-items: start; }
    .align-col-end$(short) { align-items: end; }
    .align-col-center$(short) { align-items: center; }
  }
}

.align-item-row-stretch { justify-self: stretch; } /* default */
.align-item-row-start { justify-self: start; }
.align-item-row-end { justify-self: end; }
.align-item-row-center { justify-self: center; }

@each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
  @media ($long) {
    .align-item-row-stretch$(short) { justify-self: stretch; }
    .align-item-row-start$(short) { justify-self: start; }
    .align-item-row-end$(short) { justify-self: end; }
    .align-item-row-center$(short) { justify-self: center; }
  }
}

.align-item-col-stretch { align-self: stretch; } /* default */
.align-item-col-start { align-self: start; }
.align-item-col-end { align-self: end; }
.align-item-col-center { align-self: center; }

@each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
  @media ($long) {
    .align-item-col-stretch$(short) { align-self: stretch; }
    .align-item-col-start$(short) { align-self: start; }
    .align-item-col-end$(short) { align-self: end; }
    .align-item-col-center$(short) { align-self: center; }
  }
}

.justify-row-stretch { justify-content: stretch; } /* default */
.justify-row-start { justify-content: start; }
.justify-row-end { justify-content: end; }
.justify-row-center { justify-content: center; }
.justify-row-space-around { justify-content: space-around; }
.justify-row-space-between { justify-content: space-between; }
.justify-row-space-evenly { justify-content: space-evenly; }

@each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
  @media ($long) {
    .justify-row-stretch$(short) { justify-content: stretch; }
    .justify-row-start$(short) { justify-content: start; }
    .justify-row-end$(short) { justify-content: end; }
    .justify-row-center$(short) { justify-content: center; }
    .justify-row-space-around$(short) { justify-content: space-around; }
    .justify-row-space-between$(short) { justify-content: space-between; }
    .justify-row-space-evenly$(short) { justify-content: space-evenly; }
  }
}

.justify-col-stretch { align-content: stretch; } /* default */
.justify-col-start { align-content: start; }
.justify-col-end { align-content: end; }
.justify-col-center { align-content: center; }
.justify-col-space-around { align-content: space-around; }
.justify-col-space-between { align-content: space-between; }
.justify-col-space-evenly { align-content: space-evenly; }

@each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
  @media ($long) {
    .justify-col-stretch$(short) { align-content: stretch; }
    .justify-col-start$(short) { align-content: start; }
    .justify-col-end$(short) { align-content: end; }
    .justify-col-center$(short) { align-content: center; }
    .justify-col-space-around$(short) { align-content: space-around; }
    .justify-col-space-between$(short) { align-content: space-between; }
    .justify-col-space-evenly$(short) { align-content: space-evenly; }
  }
}

.flow-row { grid-auto-flow: row; } /* default */
.flow-col { grid-auto-flow: column; }
.flow-row-dense { grid-auto-flow: row dense; }
.flow-col-dense { grid-auto-flow: column dense; }

@each $long, $short in (var(--breakpoints-long)), (var(--breakpoints-short)) {
  @media ($long) {
    .flow-row$(short) { grid-auto-flow: row; }
    .flow-col$(short) { grid-auto-flow: column; }
    .flow-row-dense$(short) { grid-auto-flow: row dense; }
    .flow-col-dense$(short) { grid-auto-flow: column dense; }
  }
}
