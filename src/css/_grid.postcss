// FIXME: Unknown postcss properties

/*
  EXAMPLES:
  https://css-tricks.com/snippets/css/complete-guide-grid/
*/

/* TEMP: https://css-tricks.com/snippets/css/complete-guide-grid/#grid-introduction */
/* TEMP: https://gridbyexample.com/browsers/ */
/* TEMP: https://rachelandrew.co.uk/archives/2017/01/03/css-grid-is-coming/ */

// TODO: Study how grids are done in tachyons (also postcss!)
/* FIXME: Make responsive */
/* FIXME: Reduce or remove calc() */
.container {
  width: 100%;
  // max-width: calc(100vw - $gutter);
  max-width: calc(790px - $gutter); // FIXME: Should be a fixed width, not relative
  padding-right: calc($gutter / 2);
  padding-left: calc($gutter / 2);
  margin-right: auto;
  // margin-left: auto; // Consider disabling this on <= md
}

.grid,
.grid-inline,
.grid-sub { /*  stylelint-disable declaration-block-no-redundant-longhand-properties */
  grid-template-columns: repeat($cols, $item-size);
  grid-template-rows: $rows;
  grid-auto-columns: $item-size;
  grid-auto-rows: $item-size;
  grid-column-gap: $gutter;
  grid-row-gap: $gutter;
  /* grid-template-rows: repeat($rows, 1fr); */
  // FIXME: Premade templates should be in their own classes -- what common templates might be useful?
  /* TODO: Update/remove this example */
  // grid-template-areas:
  //   repeat($cols, "header")
  //   repeat($cols, "middle") /* TODO: Use for-each loop so we can add 2+ names [middle mid1] */
  //   repeat($cols, "footer");
}

.grid {
  display: grid;
}

.grid-inline {
  display: inline-grid;
}

.grid-sub {
  display: subgrid;
}

/* FIXME: Can this be done without using `repeat(X, $item-size)`? */
/*
.x2 { grid-template-columns: 2; }
.x3 { grid-template-columns: 3; }
.x4 { grid-template-columns: 4; }
.x5 { grid-template-columns: 5; }
.x6 { grid-template-columns: 6; }
.x12 { grid-template-columns: 12; }
*/
.x2 { grid-template-columns: repeat(2, $item-size); }
.x3 { grid-template-columns: repeat(3, $item-size); }
.x4 { grid-template-columns: repeat(4, $item-size); }
.x5 { grid-template-columns: repeat(5, $item-size); }
.x6 { grid-template-columns: repeat(6, $item-size); }
.x12 { grid-template-columns: repeat(12, $item-size); } /* default */

.y2 { grid-template-rows: 2; }
.y3 { grid-template-rows: 3; }
.y4 { grid-template-rows: 4; }
.y5 { grid-template-rows: 5; }
.y6 { grid-template-rows: 6; }

/* TODO: Automate the creation of these classes + their responsive equivalents */

.c1 { grid-column-start: 1; }
.c2 { grid-column-start: 2; }
.c3 { grid-column-start: 3; }
.c4 { grid-column-start: 4; }
.c5 { grid-column-start: 5; }
.c6 { grid-column-start: 6; }
.c7 { grid-column-start: 7; }
.c8 { grid-column-start: 8; }
.c9 { grid-column-start: 9; }
.c10 { grid-column-start: 10; }
.c11 { grid-column-start: 11; }
.c12 { grid-column-start: 12; }

.r1 { grid-row-start: 1; }
.r2 { grid-row-start: 2; }
.r3 { grid-row-start: 3; }
.r4 { grid-row-start: 4; }
.r5 { grid-row-start: 5; }
.r6 { grid-row-start: 6; }

.w2 { grid-column-end: span 2; }
.w3 { grid-column-end: span 3; }
.w4 { grid-column-end: span 4; }
.w5 { grid-column-end: span 5; }
.w6 { grid-column-end: span 6; }
.w7 { grid-column-end: span 7; }
.w8 { grid-column-end: span 8; }
.w9 { grid-column-end: span 9; }
.w10 { grid-column-end: span 10; }
.w11 { grid-column-end: span 11; }
.w12 { grid-column-end: span 12; }

.h2 { grid-row-end: span 2; }
.h3 { grid-row-end: span 3; }
.h4 { grid-row-end: span 4; }
.h5 { grid-row-end: span 5; }
.h6 { grid-row-end: span 6; }

.align-row-stretch { justify-items: stretch; } /* default */
.align-row-start { justify-items: start; }
.align-row-end { justify-items: end; }
.align-row-center { justify-items: center; }

.align-col-stretch { align-items: stretch; } /* default */
.align-col-start { align-items: start; }
.align-col-end { align-items: end; }
.align-col-center { align-items: center; }

.align-item-row-stretch { justify-self: stretch; } /* default */
.align-item-row-start { justify-self: start; }
.align-item-row-end { justify-self: end; }
.align-item-row-center { justify-self: center; }

.align-item-col-stretch { align-self: stretch; } /* default */
.align-item-col-start { align-self: start; }
.align-item-col-end { align-self: end; }
.align-item-col-center { align-self: center; }

.justify-row-stretch { justify-content: stretch; } /* default */
.justify-row-start { justify-content: start; }
.justify-row-end { justify-content: end; }
.justify-row-center { justify-content: center; }
.justify-row-space-around { justify-content: space-around; }
.justify-row-space-between { justify-content: space-between; }
.justify-row-space-evenly { justify-content: space-evenly; }

.justify-col-stretch { align-content: stretch; } /* default */
.justify-col-start { align-content: start; }
.justify-col-end { align-content: end; }
.justify-col-center { align-content: center; }
.justify-col-space-around { align-content: space-around; }
.justify-col-space-between { align-content: space-between; }
.justify-col-space-evenly { align-content: space-evenly; }

.flow-row { grid-auto-flow: row; } /* default */
.flow-col { grid-auto-flow: column; }
.flow-row-dense { grid-auto-flow: row dense; }
.flow-col-dense { grid-auto-flow: column dense; }
